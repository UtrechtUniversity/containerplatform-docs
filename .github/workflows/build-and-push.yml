name: Build and push mkdocs openshift container to OpenShift

env:
  OPENSHIFT_PROJECT: docs
  ACC_REGISTRY_URL: registry.cp-acc.its.uu.nl
  PRD_REGISTRY_URL: registry.cp.its.uu.nl
  IMAGE_NAME: docs
  DEPLOYMENT_NAME: docs-public
  MAJOR_VERSION: 1
  OC_CLIENT_VERSION: "4.17"
  ACC_API_URL: api.cl01.cp-acc.its.uu.nl
  PRD_API_URL: api.cl01.cp.its.uu.nl

on:
  pull_request:
    branches:
      - dev
      - main
  workflow_dispatch:

jobs:
  acceptance:
    name: Acceptance Build&Push
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.base_ref == 'dev' || github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/dev'
    environment:
      name: acceptance
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: Install CLI tools from OpenShift Mirror
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          source: "mirror"
          oc: ${{ env.OC_CLIENT_VERSION }}

      - name: Install sshuttle
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install sshuttle

      - name: Create SSH Key
        id: create_ssh_key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PROXY_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          eval "$(ssh-agent -s)"
          echo "${{ secrets.PROXY_PASSPHRASE }}" | ssh-add ~/.ssh/id_ed25519

      - name: "Build image"
        run: docker build -t ${{ env.ACC_REGISTRY_URL }}/${{ env.OPENSHIFT_PROJECT }}/${{ env.IMAGE_NAME }}:dev .
        shell: bash

      - name: setup tunnel with sshuttle
        run: |
          SSHUTTLE_ARGS="-e 'ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519' --daemon" sshuttle -r ${{ secrets.SSH_USERNAME }}@${{ secrets.STEPPINGSTONE_HOST }} 0/0

      - name: "Login to registry"
        run: echo ${{ secrets.SA_DEVOPS_TOKEN_ACC }} | docker login ${{ env.ACC_REGISTRY_URL }} -u ${{ secrets.OPENSHIFT_USERNAME }} --password-stdin
        shell: bash

      - name: "Push image"
        run: docker push ${{ env.ACC_REGISTRY_URL }}/${{ env.OPENSHIFT_PROJECT }}/${{ env.IMAGE_NAME }}:dev
        shell: bash

      # Restart deployment
      - name: "Authenticate to OpenShift"
        run: oc login --token=${{ secrets.SA_DEVOPS_TOKEN_ACC }} --server=${{ env.ACC_API_URL }}:6443

      - name: "OpenShift restart deployment"
        run: oc delete pods --all --namespace ${{ env.OPENSHIFT_PROJECT }}

      # cleanup
      - name: Remove Docker config if it exists
        run: |
          if [ -f "/home/runner/.docker/config.json" ]; then
            echo "File exists. Removing..."
            rm -f "/home/runner/.docker/config.json"
          else
            echo "File does not exist. Skipping..."
          fi


  production:
    runs-on: ubuntu-latest
    name: Production Build&Push
    if: github.event_name == 'pull_request' && github.base_ref == 'main' || github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main'
    environment:
      name: production
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: Install CLI tools from OpenShift Mirror
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          source: "mirror"
          oc: ${{ env.OC_CLIENT_VERSION }}

      - name: Install sshuttle
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install sshuttle

      - name: Create SSH Key
        id: create_ssh_key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PROXY_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          eval "$(ssh-agent -s)"
          echo "${{ secrets.PROXY_PASSPHRASE }}" | ssh-add ~/.ssh/id_ed25519

      - name: "Build image"
        run: docker build -t ${{ env.PRD_REGISTRY_URL }}/${{ env.OPENSHIFT_PROJECT }}/${{ env.IMAGE_NAME }}:stable .
        shell: bash

      - name: setup tunnel with sshuttle
        run: |
          SSHUTTLE_ARGS="-e 'ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519' --daemon" sshuttle -r ${{ secrets.SSH_USERNAME }}@${{ secrets.STEPPINGSTONE_HOST }} 0/0

      - name: "Login to registry"
        run: echo ${{ secrets.SA_DEVOPS_TOKEN }} | docker login ${{ env.PRD_REGISTRY_URL }} -u ${{ secrets.OPENSHIFT_USERNAME }} --password-stdin
        shell: bash

      - name: "Push image"
        run: docker push ${{ env.PRD_REGISTRY_URL }}/${{ env.OPENSHIFT_PROJECT }}/${{ env.IMAGE_NAME }}:stable
        shell: bash

      # Restart deployment
      - name: "Authenticate to OpenShift"
        run: oc login --token=${{ secrets.SA_DEVOPS_TOKEN }} --server=${{ env.PRD_API_URL }}:6443

      - name: "OpenShift restart deployment"
        run: oc delete pods --all --namespace ${{ env.OPENSHIFT_PROJECT }}

      # cleanup
      - name: Remove Docker config if it exists
        run: |
          if [ -f "/home/runner/.docker/config.json" ]; then
            echo "File exists. Removing..."
            rm -f "/home/runner/.docker/config.json"
          else
            echo "File does not exist. Skipping..."
          fi
