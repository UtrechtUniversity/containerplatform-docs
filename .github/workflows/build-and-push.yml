name: Build and push mkdocs openshift container to OpenShift

env:
  OPENSHIFT_PROJECT: docs
  ACC_REGISTRY_URL: registry.cp-acc.its.uu.nl
  PRD_REGISTRY_URL: registry.cp.its.uu.nl
  IMAGE_NAME: docs
  MAJOR_VERSION: 1
  SSH_KEY_PATH: "/tmp/ssh-key/id_rsa"

on:
  #  push:
  #    branches: [ "main" ]
  #  pull_request:
  #    branches: [ "main" ]
  workflow_dispatch:

jobs:
  acceptance:
    runs-on: ubuntu-latest
    if: ${{ github.ref != 'refs/heads/main' }}
    environment:
      name: acceptance
    steps:
      - name: Create SSH Key
        id: create_ssh_key
        run: |
          # Create a temporary directory for the key
          mkdir -p /tmp/ssh-key
          export SSH_KEY_PATH="/tmp/ssh-key/id_rsa"
          # Write the secret to the key file
          echo "${{ secrets.PROXY_PRIVATE_KEY }}" > $SSH_KEY_PATH
          # Set permissions for the key
          chmod 600 $SSH_KEY_PATH
          eval "$(ssh-agent -s)"
          ssh-add $SSH_KEY_PATH

      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: "Add Steppingstone server to known hosts"
        run: |
          # Add the Steppingstone host to known hosts to prevent host key verification issues
          ssh-keyscan -H ${{ secrets.STEPPINGSTONE_HOST }} >> ~/.ssh/known_hosts
        shell: bash

      - name: "Establish SSH Tunnel through Steppingstone"
        run: |
          # Create the SSH tunnel (port forward)
          ssh -f -N -L 5000:${{ env.ACC_REGISTRY_URL }}:5000 ${{ secrets.SSH_USERNAME }}@${{ secrets.STEPPINGSTONE_HOST }} -i ${{ env.SSH_KEY_PATH }}

      - name: Check if we can ping the registry
        run: |
          ping -c 5 127.0.0.1
          docker info
        shell: bash

      - name: "Login to registry"
        run: echo ${{ secrets.SA_DEVOPS_TOKEN }} | docker login 127.0.0.1:5000 -u ${{ secrets.OPENSHIFT_USERNAME }} --password-stdin
        shell: bash

      - name: "Build image"
        run: docker build -t 127.0.0.1:5000/${{ env.OPENSHIFT_PROJECT }}/${{ env.IMAGE_NAME }}:dev .
        shell: bash

      - name: "Push image"
        run: docker push 127.0.0.1:5000/${{ env.OPENSHIFT_PROJECT }}/${{ env.IMAGE_NAME }}:dev
        shell: bash

  production:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    environment:
      name: production
    steps:
      - name: Create SSH Key
        id: create_ssh_key
        run: |
          # Create a temporary directory for the key
          mkdir -p /tmp/ssh-key
          export SSH_KEY_PATH="/tmp/ssh-key/id_rsa"
          # Write the secret to the key file
          echo "${{ secrets.PROXY_PRIVATE_KEY }}" > $SSH_KEY_PATH
          # Set permissions for the key
          chmod 600 $SSH_KEY_PATH
          eval "$(ssh-agent -s)"
          ssh-add $SSH_KEY_PATH

      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: "Add Steppingstone server to known hosts"
        run: |
          # Add the Steppingstone host to known hosts to prevent host key verification issues
          ssh-keyscan -H ${{ secrets.STEPPINGSTONE_HOST }} >> ~/.ssh/known_hosts
        shell: bash

      - name: "Establish SSH Tunnel through Steppingstone"
        run: |
          # Create the SSH tunnel (port forward)
          ssh -f -N -L 5000:${{ env.PRD_REGISTRY_URL }}:5000 ${{ secrets.SSH_USERNAME }}@${{ secrets.STEPPINGSTONE_HOST }} -i ${{ env.SSH_KEY_PATH }}

      - name: "Login to registry"
        run: echo ${{ secrets.SA_DEVOPS_TOKEN }} | docker login 127.0.0.1:5000 -u ${{ secrets.OPENSHIFT_USERNAME }} --password-stdin
        shell: bash

      - name: "Build image"
        run: docker build -t 127.0.0.1:5000/${{ env.OPENSHIFT_PROJECT }}/${{ env.IMAGE_NAME }}:stable .
        shell: bash

      - name: "Push image"
        run: docker push 127.0.0.1:5000/${{ env.OPENSHIFT_PROJECT }}/${{ env.IMAGE_NAME }}:stable
        shell: bash
