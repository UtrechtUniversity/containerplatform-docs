name: Build and push mkdocs openshift container to OpenShift

env:
  OPENSHIFT_PROJECT: docs
  ACC_REGISTRY_URL: registry.cp-acc.its.uu.nl
  PRD_REGISTRY_URL: registry.cp.its.uu.nl
  IMAGE_NAME: docs
  DEPLOYMENT_NAME: docs-public
  MAJOR_VERSION: 1
  SSH_KEY_PATH: "/tmp/ssh-key/id_rsa"
  OC_CLIENT_VERSION: "4.17"
  ACC_API_URL: "https://api.cl01.cp-acc.its.uu.nl"
  PRD_API_URL: "https://api.cl01.cp.its.uu.nl"

on:
  pull_request:
    branches:
      - dev
      - main
  workflow_dispatch:

jobs:
  acceptance:
    name: Acceptance Build&Push
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.base_ref == 'dev' || github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/dev'
    environment:
      name: acceptance
    steps:
      - name: Create SSH Key
        id: create_ssh_key
        run: |
          # Create a temporary directory for the key
          mkdir -p /tmp/ssh-key
          export SSH_KEY_PATH="/tmp/ssh-key/id_rsa"
          # Write the secret to the key file
          echo "${{ secrets.PROXY_PRIVATE_KEY }}" > $SSH_KEY_PATH
          # Set permissions for the key
          chmod 600 $SSH_KEY_PATH
          eval "$(ssh-agent -s)"
          ssh-add $SSH_KEY_PATH

      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: "Establish SSH Tunnel through Steppingstone"
        run: |
          # Create the SSH tunnel (port forward)
          ssh -o StrictHostKeyChecking=no -f -N -L 5000:${{ env.ACC_REGISTRY_URL }}:443 ${{ secrets.SSH_USERNAME }}@${{ secrets.STEPPINGSTONE_HOST }} -i ${{ env.SSH_KEY_PATH }}

      #      - name: "Login to registry"
      #        run: echo ${{ secrets.SA_DEVOPS_TOKEN_ACC }} | docker login ${{ env.ACC_REGISTRY_URL }} -u ${{ secrets.OPENSHIFT_USERNAME }} --password-stdin
      #        shell: bash
      #
      #      - name: "Build image"
      #        run: docker build -t ${{ env.ACC_REGISTRY_URL }}/${{ env.OPENSHIFT_PROJECT }}/${{ env.IMAGE_NAME }}:dev .
      #        shell: bash
      #
      #      - name: "Push image"
      #        run: docker push ${{ env.ACC_REGISTRY_URL }}/${{ env.OPENSHIFT_PROJECT }}/${{ env.IMAGE_NAME }}:dev
      #        shell: bash

      # Restart deployment

      - name: Install CLI tools from OpenShift Mirror
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          source: "mirror"
          oc: ${{ env.OC_CLIENT_VERSION }}

      - name: "Authenticate to OpenShift"
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ env.ACC_API_URL }}
          openshift_token: ${{ secrets.SA_DEVOPS_TOKEN_ACC }}
          namespace: ${{ env.OPENSHIFT_PROJECT }}

      - name: "OpenShift restart deployment"
        run: oc --namespace ${{ env.OPENSHIFT_PROJECT }} rollout restart deployment/${{ env.DEPLOYMENT_NAME }}


  production:
    runs-on: ubuntu-latest
    name: Production Build&Push
    if: github.event_name == 'pull_request' && github.base_ref == 'main' || github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main'
    environment:
      name: production
    steps:
      - name: Create SSH Key
        id: create_ssh_key
        run: |
          # Create a temporary directory for the key
          mkdir -p /tmp/ssh-key
          export SSH_KEY_PATH="/tmp/ssh-key/id_rsa"
          # Write the secret to the key file
          echo "${{ secrets.PROXY_PRIVATE_KEY }}" > $SSH_KEY_PATH
          # Set permissions for the key
          chmod 600 $SSH_KEY_PATH
          eval "$(ssh-agent -s)"
          ssh-add $SSH_KEY_PATH

      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: "Establish SSH Tunnel through Steppingstone"
        run: |
          # Create the SSH tunnel (port forward)
          ssh -o StrictHostKeyChecking=no -f -N -L 5000:${{ env.PRD_REGISTRY_URL }}:443 ${{ secrets.SSH_USERNAME }}@${{ secrets.STEPPINGSTONE_HOST }} -i ${{ env.SSH_KEY_PATH }}

      - name: "Login to registry"
        run: echo ${{ secrets.SA_DEVOPS_TOKEN }} | docker login ${{ env.PRD_REGISTRY_URL }} -u ${{ secrets.OPENSHIFT_USERNAME }} --password-stdin
        shell: bash

      - name: "Build image"
        run: docker build -t ${{ env.PRD_REGISTRY_URL }}/${{ env.OPENSHIFT_PROJECT }}/${{ env.IMAGE_NAME }}:stable .
        shell: bash

      - name: "Push image"
        run: docker push ${{ env.PRD_REGISTRY_URL }}/${{ env.OPENSHIFT_PROJECT }}/${{ env.IMAGE_NAME }}:stable
        shell: bash

      # Restart deployment

      - name: Install CLI tools from OpenShift Mirror
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          source: "mirror"
          oc: ${{ env.OC_CLIENT_VERSION }}

      - name: "Authenticate to OpenShift"
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ env.PRD_API_URL }}
          openshift_token: ${{ secrets.SA_DEVOPS_TOKEN }}
          namespace: ${{ env.OPENSHIFT_PROJECT }}

      - name: "OpenShift restart deployment"
        run: oc --namespace ${{ env.OPENSHIFT_PROJECT }} rollout restart deployment/${{ env.DEPLOYMENT_NAME }}